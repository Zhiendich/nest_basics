version: '3.8'

services:
  postgres:
    image: postgres:alpine
    container_name: postgres_dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - nestjs
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    env_file: .env

  redis:
    image: redis:alpine
    container_name: redis_dev
    ports:
      - 6379:6379
    restart: unless-stopped

  app:
    build:
      context: .
    image: nest_basics
    container_name: nest_basics
    ports:
      - 5000:5000
    # volumes:
    #   - ./:/app
    #   - node_modules:/app/node_modules
    restart: unless-stopped
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  # node_modules:
  postgres_data:

networks:
  nestjs:
